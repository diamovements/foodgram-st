version: '3.8'

services:
  db:
    image: postgres:13
    restart: on-failure
    env_file: .env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data

  backend:
    container_name: foodgram-back
    build: ../backend/
    env_file: .env
    environment:
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - DB_ENGINE=${DB_ENGINE}
      - DB_NAME=${DB_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
    depends_on:
      - db
    restart: always
    command: /app/entrypoint.sh
    volumes:
      - static:/static
      - media:/app/media/
      - ../data:/app/data
      - ../backend/entrypoint.sh:/app/entrypoint.sh
    ports:
      - '8000:8000'

  frontend:
    container_name: foodgram-front
    env_file: .env
    build: ../frontend
    command: cp -r /app/build/. /static/
    volumes:
      - static:/static

  nginx:
    container_name: foodgram-proxy
    build: .
    volumes:
      - static:/static
      - media:/media
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../docs/:/usr/share/nginx/html/redoc/
    ports:
      - '80:80'
    depends_on:
      - backend

volumes:
  pg_data:
  static:
  media: